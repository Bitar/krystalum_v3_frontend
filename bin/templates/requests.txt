import axios, {AxiosError, AxiosResponse} from 'axios'
import {{{MODULE_NAME}}, {{MODULE_NAME}}List, {{MODULE_NAME}}Paginate} from '../../models/{{MODULE_PATH}}';
import {createFormData} from '../../helpers/requests';

const API_URL = process.env.REACT_APP_API_URL
const ENDPOINT = `${API_URL}/{{LOWERCASE_PLURAL_PATH}}`
export const EXPORT_ENDPOINT = `${ENDPOINT}/export`;

export const getAll{{PLURAL_MODULE_NAME}} = async (): Promise<{{MODULE_NAME}}List | AxiosError | undefined> => {
    return axios.get(ENDPOINT + '/all?sort[]=name').then((response: AxiosResponse<{{MODULE_NAME}}List>) => response.data).catch((error) => {
        return error;
    });
}

export const get{{PLURAL_MODULE_NAME}} = (query?: String): Promise<{{MODULE_NAME}}Paginate> => {
    let url = `${ENDPOINT}`;

    if (query) {
        url += `?${query}`;
    }

    return axios.get(url).then((response: AxiosResponse<{{MODULE_NAME}}Paginate>) => response.data).catch((error) => {
        return error;
    });
}

export const get{{MODULE_NAME}} = async (id: number): Promise<{{MODULE_NAME}} | AxiosError | undefined> => {
    return await axios.get(ENDPOINT + '/' + id)
        .then(res => res.data.data).catch((error) => {
            return error;
        });
}

export const store{{MODULE_NAME}} = async ({{LOWERCASE_MODULE_NAME}}: any): Promise<{{MODULE_NAME}} | AxiosError | undefined> => {
    let formData = createFormData({{LOWERCASE_MODULE_NAME}});

    return await axios.post(ENDPOINT + '/', formData)
        .then(res => res.data.data)
        .catch((error) => {
            error = error as AxiosError;

            return error;
        });
}

export const update{{MODULE_NAME}} = async ({{LOWERCASE_MODULE_NAME}}: any): Promise<{{MODULE_NAME}} | AxiosError | undefined> => {
    let formData = createFormData({{LOWERCASE_MODULE_NAME}});

    formData.append('_method', 'put');

    return await axios.post(ENDPOINT + '/' + {{LOWERCASE_MODULE_NAME}}.id, formData).then(res => res.data.data).catch((error) => {
        return error;
    });
}
